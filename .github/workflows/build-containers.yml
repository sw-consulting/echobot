# Copyright (c) 2025 Maxim Samsonov  All rights reserved.
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: build-containers

on:
  push:
    paths-ignore:
      - '**.adoc'
      - '**.txt'
      - '**.md'
    tags:
      - "v*"
  pull_request:
    paths-ignore:
      - '**.adoc'
      - '**.txt'
      - '**.md'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  build-containers:
    name: Echobot for ${{ matrix.architecture.platform }} platform
    runs-on: ${{ matrix.architecture.host }}
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - { host: 'ubuntu-22.04', platform: linux/amd64, suffix: 'x64', suffix2: 'amd64' }
          - { host: 'ubuntu-22.04-arm', platform: linux/arm64, suffix: 'arm64', suffix2: 'arm64' }

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: sw.consulting
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/sw.consulting/echobot
          tags: |
            type=semver,pattern={{version}}-${{ matrix.architecture.suffix2 }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.architecture.suffix2 }}
            type=semver,pattern={{major}}-${{ matrix.architecture.suffix2 }}
            type=sha,suffix=-${{ matrix.architecture.suffix2 }}
          labels: |
            org.opencontainers.image.vendor=sw.consulting
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.documentation=${{ github.repositoryUrl }}/README.md
            org.opencontainers.image.source==${{ github.repositoryUrl }}
            org.opencontainers.image.description=Telegram echobot container
          annotations: |
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.description=Telegram echobot container

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push:  ${{ contains(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: ${{ matrix.architecture.platform }}
          build-args: ARCH=${{ matrix.architecture.suffix }}

  create-manifests:
    name: Create multiarchitecture manifests
    if: contains(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    needs: build-containers
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: sw.consulting
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multiarchitecture manifests and push
        run: |
            for tag in $(echo "${{ needs.build-containers.outputs.tags }}" | tr ',' '\n'); do
              if [[ $tag != *:latest ]]; then
                base_tag=$(echo $tag | sed -E 's/.*:(.*)-(amd64|arm64)/\1/')
                echo "Processing $tag, using base tag $base_tag"
                ./tools/create-manifests.sh "${{ matrix.container }}" "$base_tag"
              fi
            done
